@startuml

' Human management

skinparam linetype ortho

    abstract class Person {
        -id: int
        -lastName: string
        -firstName: string
    }

    class User {
        -birtDate: Date
        -loginName: string
        -password: string
        -verified: bool
        -activated: bool
        -timezone: DateTimeZone

        +validateCart(Cart cart): bool

    }

    class Athlete {

    }

    class Receipt{
        id: int
        amount: float
    }


    ' Money management
    class Wallet {
        -id: int
        -balance: float
        --
        +removeFromBalance(float amount): bool
        +addToBalance(float amount): void
    }

    'History'
    class Transaction {
        -id: int
        -date: Date
        -wallet: Wallet
        -betAmount: float
        -betTemplateChoice : BetTemplateChoice

        +getList()
    }

    class Bet {
        -id: int
        -amount: float
        -status: int
        -date: DateTime
        -cote: float

        +modifyAmount()
    }

    class BetTemplate{
        -id: int
        -sportType: SportType
        -description: array []

        '?
        +addToBetList(string newBetPossibility): void
        +deleteToBetList(int ID) : void
        +editToBetList(int ID, string modifiedBetPossibility): void
    }

    class BetTemplateChoice{
        -id: int
        -updatedDescription : string []

        +addNewChoice(BetTemplate betTemplate, SportEvent sportEvent): void
    }

    class EncounterEvent{
        id: int
        SportType:  SportType
        SportEvent: SportEvent

        +verifyBet(): void
        +addEncounterEvent(BetTemplateChoice betTemplateChoice[int choice])
    }

    ' Sport management
    class SportEvent {
        -id: int
        -lieu: string
        -competition: string
        -date: Date
        -timezone: DateTimeZone
    }

    class SportTeam {
        -id: int
        -teamName: string

        +defineActive(Athlete athlete):void
        +defineSubstitute(Athlete athlete):void
        +editName(int ID, string newTeamName): void
    }

    class SportType {
        -id: int
        -nameType: string
        -nbrAthleteActive: int
    }

    class Cart{
        cartItem : CartItem []
    }

    class BetChoices{
        id: int
        choice: int []

        +selectBet(BetTemplateChoice betTemplateChoice[int choice]):void
        +deleteBet(BetTemplateChoice betTemplateChoice[int choice]):void
    }

    class CartItem{
        - betChoices : BetChoices
        - bet : Bet
    }




' ========================================================================='

' Inherit of
User <|-u- Person :is
Athlete <|-- Person :is

' Relation
User "1" *-u- "1" Wallet :manage
User "1" *-- "1" Cart :operate
'User "0,n" *-- "1" BetTemplateChoice :bid

Wallet "0,n" -d-* "1" Receipt :print

'Cart "0,n" --o "1" Bet :insert
Cart "0,n" *-r- "1" Transaction :generate

Athlete "1,n" --* "1,n" SportTeam :employ

EncounterEvent "1,n" --* "0,n" SportEvent :occur
SportType "1" -- "1" BetTemplate :list

SportEvent "2,n" --o "1,n" SportTeam : participate
SportEvent "1" *-- "0,n" SportType : define

BetTemplate "0,n"  -- "1" BetTemplateChoice : choose
'Bet "1" -r-* "0,n" BetTemplateChoice : create

Bet "1" --* "1" CartItem : insert

CartItem "1" --o "0,n" Cart : add
CartItem "1" *-- "1" BetChoices : insert


@enduml
